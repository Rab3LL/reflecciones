What happens when you initialize a repository? Why do you need to do it?
	Primero uno debe colocorse en el folder en donde se desea crear el repository. 
	Después de ejecutar el comando que crea el repository se crea un folder oculto 
	en el folder en donde nos encontramos. El folder oculto para poder ser visto 
	se debe usar el comando ls -a. El folder oculto tiene el nombre de .git El 
	ejecutar el comando git log en el nuevo repositorio causa un error debido a 
	que el repositorio se encuentra vacio, es decir, todavía no se han hecho 
	ningún commit.
	El repositorio se encuentra vacio porque todavía no indicamos qué archivos son 
	los que deseamos seguir de cerca. Esto se debe a que talvez, no deseamos seguir 
	a todos los archivos y solo a unos cuantos.

How is the staging area different from the working directory and the repository? What value do you think it offers?
	El área de staging es el lugar intermedio entre el área de trabajo y el área de 
	commit. Es el área en donde se le hacen cambios a los archivos que estan en el 
	área de trabajo pero aún no estan listos para pasar por el proceso de commit. 
	Pienso que el área de staging nos permite experimentar cambios antes de que 
	decidamos hacerlos permanentes.

How can you use the staging area to make sure you have one commit per logical change?
	Con el fin de poder realizar un commit por cada cambio lógico al código se 
	utiliza la staging area como una to-do list. La staging area se utiliza como la 
	lista de cambios por realizar un commit. De esta forma se tiene una relación de 
	cambios que requieren ser procesados por un commit y así poder clasificar 
	mentalmente por "tema" los cambios. Todos los cambios que pertenezca a un mismo 
	"tema" deberán ser procesados por un mismo commit.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
	El uso de branches puede ser muy útil. Por ejemplo, cuando se desea hacer un 
	experimento en el proyecto que no estamos seguros que vaya a funcionar o en el 
	caso de programar un video juego podemos hacer una versión "difícil" para el 
	jugador y otra versión del juego en el que es más "fácil" jugarlo.
	En un inicio, cuando acabamos de crear el nuevo branch, cada branch contiene el
	mismo código. Una vez que empezamos a trabajar en alguno de los branches y 
	hacemos sus respectivos commits cada branch empieza a diferir del otro y así se 
	inician diferentes evoluciones por cada uno de los branches. De esta forma se da 
	mucha flexibilidad en empezar diferentes proyectos con una misma base pero con 
	diferentes enfoques y desarrollos y sin añadirle una carga adicional para poder 
	ir siguiendo sus respectivoas evoluciones.